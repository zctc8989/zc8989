<html lang="zh-CN">
<head>
  <meta content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0" name="viewport">
  <meta content="yes" name="apple-mobile-web-app-capable">
  <meta content="yes" name="apple-touch-fullscreen">
  <meta content="black" name="apple-mobile-web-app-status-bar-style">
  <meta content="320" name="MobileOptimized">
  <meta name="mobile-web-app-capable" content="yes">
  <title></title>
<style>
.container {
        width: 100px;
        height: 100px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .dot {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        background-color: #000;
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: auto;
    }

    .dot-3 {
        background-color: #f74d75;
    }

    .dot-2 {
        background-color: #10beae;
    }

    .dot-1 {
        background-color: #ffe386;
    }

    .dot-3 {
        background-color: #f74d75;
        animation: dot-3-move 2s ease infinite;
    }

    @keyframes dot-3-move {
        20% {
            transform: scale(1)
        }

        45% {
            transform: translateY(-18px) scale(.45)
        }

        60% {
            transform: translateY(-25px) scale(.45)
        }

        80% {
            transform: translateY(-25px) scale(.45)
        }

        100% {
            transform: translateY(0px) scale(1)
        }
    }

    .dot-2 {
        background-color: #10beae;
        animation: dot-2-move 2s ease infinite;
    }

    .dot-1 {
        background-color: #ffe386;
        animation: dot-1-move 2s ease infinite;
    }

    @keyframes dot-2-move {
        20% {
            transform: scale(1)
        }

        45% {
            transform: translate(-16px, 12px) scale(.45)
        }

        60% {
            transform: translate(-20px, 15px) scale(.45)
        }

        80% {
            transform: translate(-20px, 15px) scale(.45)
        }

        100% {
            transform: translateY(0px) scale(1)
        }
    }

    @keyframes dot-1-move {
        20% {
            transform: scale(1)
        }

        45% {
            transform: translate(16px, 12px) scale(.45)
        }

        60% {
            transform: translate(20px, 15px) scale(.45)
        }

        80% {
            transform: translate(20px, 15px) scale(.45)
        }

        100% {
            transform: translateY(0px) scale(1)
        }
    }

    .container {
        width: 100px;
        height: 100px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        animation: rotate-move 2s ease-in-out infinite;
    }

    @keyframes rotate-move {
        55% {
            transform: translate(-50%, -50%) rotate(0deg)
        }

        80% {
            transform: translate(-50%, -50%) rotate(360deg)
        }

        100% {
            transform: translate(-50%, -50%) rotate(360deg)
        }
    }
   .content{height:100%;width:100%;position: fixed;left: -2px;top: -2px;}
   .warning-message {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: #ff6b6b;
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        z-index: 1000;
        font-size: 14px;
    }
</style>
<body>

<div class="container">
            <div class="dot dot-1"></div>
            <div class="dot dot-2"></div>
            <div class="dot dot-3"></div>
</div>

 <script>
// 清除缓存并确保使用最新代码
console.log('页面版本: 3.0 - 支持HTTP/HTTPS自适应');

var urlParams = new URLSearchParams(window.location.search);
var encodedParam = urlParams.get('c');
console.log('编码参数:', encodedParam);

if (encodedParam) {
    try {
        var tureurl = atob(encodedParam);
        console.log('原始解码URL:', tureurl);
        
        // 检测当前页面协议
        var currentProtocol = window.location.protocol;
        console.log('当前页面协议:', currentProtocol);
        
        // 确保URL有协议前缀
        if (!tureurl.startsWith('http://') && !tureurl.startsWith('https://')) {
            tureurl = 'http://' + tureurl;
            console.log('添加HTTP协议:', tureurl);
        }
        
        // 智能协议适配
        var finalUrl = tureurl;
        var useHttps = currentProtocol === 'https:';
        
        if (useHttps && tureurl.startsWith('http://')) {
            // 尝试HTTPS版本
            var httpsUrl = tureurl.replace('http://', 'https://');
            console.log('尝试HTTPS版本:', httpsUrl);
            
            // 先尝试HTTPS，如果失败再回退到HTTP
            finalUrl = httpsUrl;
        }
        
        console.log('最终URL:', finalUrl);
        
        setTimeout(function() {
            console.log('开始加载iframe...');
            
            // 安全地隐藏加载动画
            var container = document.querySelector('.container');
            if (container) {
                container.style.display = "none";
                console.log('隐藏加载动画');
            } else {
                console.warn('未找到容器元素');
            }
            
            // 创建iframe
            var iframe = document.createElement('iframe');
            iframe.className = 'content';
            iframe.src = finalUrl;
            iframe.frameBorder = '0';
            iframe.allowFullscreen = true;
            iframe.style.border = 'none';
            
            // 加载成功处理
            iframe.onload = function() {
                console.log('iframe加载成功');
                try {
                    bindMouseWhee(iframe);
                } catch(e) {
                    console.log('绑定鼠标事件失败:', e);
                }
            };
            
            // 加载失败处理 - 尝试回退到HTTP
            iframe.onerror = function() {
                console.warn('iframe加载失败，尝试回退到HTTP');
                
                if (useHttps && finalUrl.startsWith('https://')) {
                    // 移除失败的iframe
                    if (iframe.parentNode) {
                        iframe.parentNode.removeChild(iframe);
                    }
                    
                    // 显示警告信息
                    showWarning('HTTPS加载失败，正在尝试HTTP版本...');
                    
                    // 尝试HTTP版本
                    setTimeout(function() {
                        var httpUrl = finalUrl.replace('https://', 'http://');
                        console.log('尝试HTTP版本:', httpUrl);
                        
                        var newIframe = document.createElement('iframe');
                        newIframe.className = 'content';
                        newIframe.src = httpUrl;
                        newIframe.frameBorder = '0';
                        newIframe.allowFullscreen = true;
                        newIframe.style.border = 'none';
                        
                        newIframe.onload = function() {
                            console.log('HTTP版本加载成功');
                            hideWarning();
                            try {
                                bindMouseWhee(newIframe);
                            } catch(e) {
                                console.log('绑定鼠标事件失败:', e);
                            }
                        };
                        
                        newIframe.onerror = function() {
                            console.error('HTTP版本也加载失败');
                            showWarning('目标网站无法访问，请检查URL是否正确');
                        };
                        
                        document.body.appendChild(newIframe);
                    }, 1000);
                } else {
                    console.error('iframe加载失败');
                    showWarning('目标网站无法访问，请检查URL是否正确');
                }
            };
            
            document.body.appendChild(iframe);
            console.log('iframe已添加到页面');
            
        }, 1500);
    } catch(e) {
        console.error("解码失败:", e);
        showWarning('链接解析失败，请检查链接格式');
    }
} else {
    console.log("缺少c参数");
    showWarning('缺少必要的访问参数');
}

// 显示警告信息
function showWarning(message) {
    var existingWarning = document.querySelector('.warning-message');
    if (existingWarning) {
        existingWarning.textContent = message;
    } else {
        var warning = document.createElement('div');
        warning.className = 'warning-message';
        warning.textContent = message;
        document.body.appendChild(warning);
    }
}

// 隐藏警告信息
function hideWarning() {
    var warning = document.querySelector('.warning-message');
    if (warning) {
        warning.parentNode.removeChild(warning);
    }
}
  </script>

 <script>
var firefox = navigator.userAgent.indexOf('Firefox') != -1;
function MouseWheel(e,doc){
	e.preventDefault && e.preventDefault(),e.returnValue = false;
	var up = firefox && e.detail < 0 || e.wheelDelta > 0;
	doc.body.scrollTop = doc.documentElement.scrollTop += up?-50:50;
}
function bindMouseWhee(ifr){
	try{
		var doc = ifr.contentWindow.document;
		firefox?doc.addEventListener('DOMMouseScroll',function(e){MouseWheel(e,doc)},false):(doc.onmousewheel = function(e){MouseWheel(e||ifr.contentWindow.event,doc)});
	}catch(e){
		console.log('跨域无法获取iframe加载document', e);
	}
}
</script> 
</body>
</html>
